syntax='proto3';


//Defining a message to store all the configurations to be required for the game.
message GameConfig {
  int32 window_width = 1;
  int32 window_height = 2;
  int32 board_width = 3;
  int32 board_height = 4;
  int32 snake_size = 5;
  int32 game_speed = 6;
  int32 max_x = 7;
  int32 max_y = 8;
  float scroll_response_x = 9;
  float scroll_response_y = 10;
  float scroll_fraction_x = 11;
  float scroll_fraction_y = 12;
  string background_color = 13;
  string border_color = 14;
}

//Use this message for empty requests
message GetRequest {}

message JoinRequest {
  string name = 1;
}

message Point {
  int32 x = 1;
  int32 y = 2;
}

message Snake {
  string name = 1;
  string color = 2;
  string direction = 3;
  repeated Point body = 4;
}

message MoveRequest {
  string name = 1;
  string direction = 2;
}

message SnakeSegment {
  Point point = 1;
  string color = 2;
}

message CollisionRequest {
  string name = 1;
}

message CollisionResponse {
  bool collided = 1;
}


service SnakeService {
  rpc GetGameConfigurations(GetRequest) returns (GameConfig);
  rpc JoinGame(JoinRequest) returns (Snake);
  rpc MoveSnake(MoveRequest) returns (Snake);
  rpc GetAllSnakes(Point) returns (stream SnakeSegment);
  rpc GetFood(GetRequest) returns (stream Point);
  rpc AddMoreFood(GetRequest) returns (Point);
  rpc CheckCollision(CollisionRequest) returns (CollisionResponse);
}